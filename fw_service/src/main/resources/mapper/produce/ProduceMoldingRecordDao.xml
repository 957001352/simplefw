<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fw.service.produce.dao.ProduceMoldingRecordDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.fw.entity.produce.ProduceMoldingRecord">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="plan_molding_id" property="planMoldingId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="qualified" property="qualified" jdbcType="INTEGER"/>
        <result column="unqualified" property="unqualified" jdbcType="INTEGER"/>
        <result column="bank_status" property="bankStatus" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        create_time,
        plan_molding_id, create_user, qualified, unqualified,bank_status
    </sql>

    <insert id="insert" parameterType="com.fw.entity.produce.ProduceMoldingRecord" useGeneratedKeys="true" keyProperty="id">
        insert into fw_produce_molding_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="planMoldingId != null">plan_molding_id,</if>
            <if test="createUser != null">create_user,</if>
            <if test="qualified != null">qualified,</if>
            <if test="unqualified != null">unqualified,</if>
            <if test="bankStatus != null">bank_status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="planMoldingId != null">#{planMoldingId},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="qualified != null">#{qualified},</if>
            <if test="unqualified != null">#{unqualified},</if>
            <if test="bankStatus != null">#{bankStatus},</if>
        </trim>
    </insert>
    <update id="updateBankStatus">
        update fw_produce_molding_record set bank_status = #{bankStatus} where id in (${ids})
    </update>

    <select id="findList" resultType="com.fw.entity.produce.ProduceMoldingRecord">
        SELECT
            t1.id,
            t1.plan_molding_id,
            DATE_FORMAT(t1.create_time,'%Y-%m-%d %H:%i:%s') as create_time,
            t1.create_user,
            t1.qualified,
            t1.unqualified,
            t1.bank_status,
            t2.product_code as of_no,
            t2.product_devices_id,
            t3.name as mould_name,
            t3.code as mould_code,
            t4.code as product_code
        FROM
	    fw_produce_molding_record t1
	    LEFT JOIN fw_plan_injection_molding t2 ON t1.plan_molding_id = t2.id
	    LEFT JOIN fw_mould_devices t3 ON t2.mould_id = t3.id
	    LEFT JOIN fw_logistics_product t4 on t2.product_id = t4.id
	    WHERE 1=1
	    <if test="ofNo">and t2.product_code = #{ofNo}</if>
    </select>

</mapper>
